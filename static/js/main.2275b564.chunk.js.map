{"version":3,"sources":["components/Header.js","components/Loading.js","components/Weather.js","api/api.js","App.js","reportWebVitals.js","index.js"],"names":["Header","backgroundImage","bgStyle","id","style","undefined","className","Loading","Weather","weather","cityName","temp","location","cloudiness","forecastWeather","minTemp","maxTemp","windSpeed","humidity","Math","round","BASE_URL","API_KEY","Unix_timestamp","t","dt","Date","hr","getHours","m","getMinutes","s","getSeconds","substr","api","getWeather","city","a","axios","get","data","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","coordinates","coords","latitude","longitude","sunrise","sys","sunset","newState","main","tempMin","temp_min","tempMax","temp_max","isLoading","description","name","wind","speed","clouds","all","conditionCode","console","log","App","useState","newCity","setData","useEffect","then","forecast","href","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAoBeA,EAlBA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACZC,EAAU,CACZD,gBAAgB,QAAD,OAAUA,EAAV,OAEjB,OACE,gCACE,qBACEE,GAAG,aACHC,WAA2BC,IAApBJ,EAAgC,KAAOC,GACzCD,GAEP,qBAAKE,GAAG,aAAaG,UAAU,cAA/B,mCCHSC,MAVf,WACE,OACE,qBAAKD,UAAU,UAAf,SACE,0CACU,mBAAGA,UAAU,4CCkDdE,G,MAnDC,SAAC,GAWV,IAVLC,EAUI,EAVJA,QACAC,EASI,EATJA,SAEAC,GAOI,EARJC,SAQI,EAPJD,MAEAE,GAKI,EANJC,gBAMI,EALJD,YACAE,EAII,EAJJA,QACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAIA,OACE,gCACE,qBAAKZ,UAAU,cAAf,SACE,2DAA4BI,OAE9B,qBAAKP,GAAG,cAAcG,UAAU,cAAhC,SACE,sBAAMH,GAAG,YAAT,oBAA0BgB,KAAKC,MAAMT,IAArC,OARI,OAQJ,SAGF,sBAAKR,GAAG,UAAR,UACE,sBAAKG,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,aAAf,SAA6BG,MAE/B,qBAAKH,UAAU,oBAAf,SACE,qBAAKA,UAAU,aAAf,+BAA4CO,EAA5C,SAEF,qBAAKP,UAAU,oBAAf,SACE,qBAAKA,UAAU,aAAf,6BAA0CS,GAA1C,OApBA,OAoBA,YAGJ,sBAAKT,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,aAAf,6BAA0CU,GAA1C,OAzBA,OAyBA,SAEF,qBAAKV,UAAU,oBAAf,SACE,qBAAKA,UAAU,aAAf,yBAAsCW,EAAtC,WAEF,qBAAKX,UAAU,oBAAf,SACE,qBAAKA,UAAU,aAAf,6BAA0CY,EAA1C,oB,wCC5CNG,EAAW,mDACXC,EAAU,mCAYhB,SAASC,EAAeC,GACtB,IAAIC,EAAK,IAAIC,KAAS,IAAJF,GACdG,EAAKF,EAAGG,WACRC,EAAI,IAAMJ,EAAGK,aACbC,EAAI,IAAMN,EAAGO,aACjB,OAAOL,EAAK,IAAME,EAAEI,QAAQ,GAAK,IAAMF,EAAEE,QAAQ,GA6BnD,IAuCeC,EAvCL,CAGRC,WAAW,WAAD,4BAAE,WAAgBC,GAAhB,iCAAAC,EAAA,0DACND,EADM,gCAEeE,IAAMC,IAAN,UAClBlB,EADkB,aACLe,EADK,kBACSd,EADT,kBAFf,kBAEAkB,KAFA,uCA9CL,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQ,CACxDI,oBAAoB,EACpBC,QAAS,IACTC,WAAY,OA0CJ,cAMFC,EANE,SAOwBA,EAAYC,OAApCC,EAPA,EAOAA,SAAUC,EAPV,EAOUA,UAPV,UAQef,IAAMC,IAAN,UAClBlB,EADkB,eACH+B,EADG,gBACaC,EADb,kBACgC/B,EADhC,kBARf,wBAQAkB,EARA,EAQAA,KAGFc,EAAU/B,EAAeiB,EAAKe,IAAID,SAClCE,EAASjC,EAAeiB,EAAKe,IAAIC,QAGnCC,EAAW,CACb9C,KAAM6B,EAAKkB,KAAK/C,KAChBgD,QAASnB,EAAKkB,KAAKE,SACnBC,QAASrB,EAAKkB,KAAKI,SACnBC,WAAW,EACXtD,QAAS+B,EAAK/B,QAAQ,GAAGuD,YACzBtD,SAAU8B,EAAKyB,KACfhD,UAAWuB,EAAK0B,KAAKC,MACrBb,UACAE,SACA3C,WAAY2B,EAAK4B,OAAOC,IACxBpE,iBArDoBqE,EAqDgB9B,EAAK/B,QAAQ,GAAGN,GAlDtDmE,EAAgB,IACA,kCAETA,EAAgB,KAAOA,EAAgB,IAC9B,kCAETA,EAAgB,KAAOA,EAAgB,IAC9B,kCAETA,EAAgB,KAAOA,EAAgB,IAC9B,kCACTA,EAAgB,KAAOA,EAAgB,IAC9B,4BACS,MAAlBA,EACS,kCAEA,mCAmCdpD,SAAUsB,EAAKkB,KAAKxC,UAEtBqD,QAAQC,IAAIhC,EAAK/B,QAAQ,GAAGN,IA7BpB,kBA+BDsD,GA/BC,kCA3Bd,IAA4Ba,IA2Bd,OAAF,mDAAC,ICFEG,G,MA3CH,WACV,MAAwBC,mBAAS,CAC/BX,WAAW,EACXY,QAAS,GACT1E,qBAAiBI,IAHnB,mBAAOmC,EAAP,KAAaoC,EAAb,KAYA,OANAC,qBAAU,WACG3C,EAAIC,aAAa2C,MAAK,SAACrB,GAChCmB,EAAQnB,QAET,IAGD,sBAAKtD,GAAG,eAAeG,UAAU,YAAjC,UACE,cAAC,EAAD,CAAQL,gBAAiBuC,EAAKvC,kBAE7BuC,EAAKuB,UACJ,cAAC,EAAD,IAEA,cAAC,EAAD,CACEtD,QAAS+B,EAAK/B,QACdC,SAAU8B,EAAK9B,SACfC,KAAM6B,EAAK7B,KACXI,QAASyB,EAAKmB,QACd3C,QAASwB,EAAKqB,QACdP,QAASd,EAAKc,QACdE,OAAQhB,EAAKgB,OACb3C,WAAY2B,EAAK3B,WACjBC,gBAAiB0B,EAAKuC,SACtB9D,UAAWuB,EAAKvB,UAChBC,SAAUsB,EAAKtB,WAGnB,qBAAKZ,UAAU,cAAcH,GAAG,cAAhC,SACE,mBAAG6E,KAAK,+CAA+CC,OAAO,SAA9D,SACE,wBAAQ3E,UAAU,kBAAlB,4CC/BK4E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2275b564.chunk.js","sourcesContent":["import \"./Header.css\";\n\nconst Header = ({ backgroundImage }) => {\n  let bgStyle = {\n    backgroundImage: `url('${backgroundImage}')`,\n  };\n  return (\n    <div>\n      <div\n        id=\"background\"\n        style={backgroundImage === undefined ? null : bgStyle}\n        key={backgroundImage}\n      />\n      <div id=\"title-text\" className=\"text-center\">\n        Local Weather App\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","function Loading() {\n  return (\n    <div className=\"loading\">\n      <h1>\n        Loading <i className=\"fa fa-spinner fa-spin fa-1x da-fw\" />\n      </h1>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport \"./Weather.css\";\n\nconst Weather = ({\n  weather,\n  cityName,\n  location,\n  temp,\n  forecastWeather,\n  cloudiness,\n  minTemp,\n  maxTemp,\n  windSpeed,\n  humidity,\n}) => {\n  let deg = \"\\u00B0\";\n\n  return (\n    <div>\n      <div className=\"text-center\">\n        <h3>{`Showing weather for ${cityName}`}</h3>\n      </div>\n      <div id=\"temperature\" className=\"text-center\">\n        <span id=\"temp-text\">{` ${Math.round(temp)}${deg}C`}</span>\n      </div>\n\n      <div id=\"details\">\n        <div className=\"row\">\n          <div className=\"col-xs-4 col-sm-4\">\n            <div className=\"detail-box\">{weather}</div>\n          </div>\n          <div className=\"col-xs-4 col-sm-4\">\n            <div className=\"detail-box\">{`Cloudiness: ${cloudiness}%`}</div>\n          </div>\n          <div className=\"col-xs-4 col-sm-4\">\n            <div className=\"detail-box\">{`Min temp: ${minTemp}${deg}C`}</div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-4 col-sm-4\">\n            <div className=\"detail-box\">{`Max temp: ${maxTemp}${deg}C`}</div>\n          </div>\n          <div className=\"col-xs-4 col-sm-4\">\n            <div className=\"detail-box\">{`Wind: ${windSpeed}kph`}</div>\n          </div>\n          <div className=\"col-xs-4 col-sm-4\">\n            <div className=\"detail-box\">{`Humidity: ${humidity}%`}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/weather?\";\nconst API_KEY = \"f904f314bb36070d99d69fd1df14fa8f\";\n\nfunction getCurrentLocation() {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0,\n    });\n  });\n}\n\nfunction Unix_timestamp(t) {\n  var dt = new Date(t * 1000);\n  var hr = dt.getHours();\n  var m = \"0\" + dt.getMinutes();\n  var s = \"0\" + dt.getSeconds();\n  return hr + \":\" + m.substr(-2) + \":\" + s.substr(-2);\n}\n\n\n// https://openweathermap.org/weather-conditions\nfunction getBackgroundImage(conditionCode) {\n  let backgroundToUse;\n  // Thunderstorm\n  if (conditionCode < 233) {\n    backgroundToUse = \"https://i.imgur.com/D0S3rsW.jpg\";\n    // drizzle weather\n  } else if (conditionCode > 299 && conditionCode < 330) {\n    backgroundToUse = \"https://i.imgur.com/48J1B7y.jpg\";\n    // rain\n  } else if (conditionCode > 499 && conditionCode < 532) {\n    backgroundToUse = \"https://i.imgur.com/Wg1xtgH.jpg\";\n    // Snow\n  } else if (conditionCode > 599 && conditionCode < 623) {\n    backgroundToUse = \"https://i.imgur.com/F6kInOS.jpg\";\n  } else if (conditionCode > 700 && conditionCode < 782) {\n    backgroundToUse = \"https://imgur.com/lmQb9Vw\";\n  } else if (conditionCode === 800) {\n    backgroundToUse = \"https://i.imgur.com/SI8TbKh.jpg\";\n  } else {\n    backgroundToUse = \"https://i.imgur.com/9BN14fr.jpg\";\n  }\n  return backgroundToUse;\n}\n\nlet api = {\n  // Search using city Name\n\n  getWeather: async function (city) {\n    if (city) {\n      const { data } = await axios.get(\n        `${BASE_URL}q=${city}&appid=${API_KEY}&units=metric`\n      );\n    } else {\n      const coordinates = await getCurrentLocation();\n      const { latitude, longitude } = coordinates.coords;\n      const { data } = await axios.get(\n        `${BASE_URL}lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`\n      );\n      const sunrise = Unix_timestamp(data.sys.sunrise);\n      const sunset = Unix_timestamp(data.sys.sunset);\n\n      \n      let newState = {\n        temp: data.main.temp,\n        tempMin: data.main.temp_min,\n        tempMax: data.main.temp_max,\n        isLoading: false,\n        weather: data.weather[0].description,\n        cityName: data.name,\n        windSpeed: data.wind.speed,\n        sunrise,\n        sunset,\n        cloudiness: data.clouds.all,\n        backgroundImage: getBackgroundImage(data.weather[0].id),\n        humidity: data.main.humidity,\n      };\n      console.log(data.weather[0].id)\n\n      return newState;\n    }\n  },\n};\n\nexport default api;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Loading from \"./components/Loading\";\nimport Weather from \"./components/Weather\";\nimport api from \"./api/api\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [data, setData] = useState({\n    isLoading: true,\n    newCity: \"\",\n    backgroundImage: undefined,\n  });\n\n  useEffect(() => {\n    let data = api.getWeather().then((newState) => {\n      setData(newState);\n    });\n  }, []);\n\n  return (\n    <div id=\"main-wrapper\" className=\"container\">\n      <Header backgroundImage={data.backgroundImage} />\n\n      {data.isLoading ? (\n        <Loading />\n      ) : (\n        <Weather\n          weather={data.weather}\n          cityName={data.cityName}\n          temp={data.temp}\n          minTemp={data.tempMin}\n          maxTemp={data.tempMax}\n          sunrise={data.sunrise}\n          sunset={data.sunset}\n          cloudiness={data.cloudiness}\n          forecastWeather={data.forecast}\n          windSpeed={data.windSpeed}\n          humidity={data.humidity}\n        />\n      )}\n      <div className=\"text-center\" id=\"source-code\">\n        <a href=\"https://github.com/denskiz/react-weather-app\" target=\"_blank\">\n          <button className=\"btn btn-success\">Source code on GitHub</button>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}